@using gabrieland.Client.Models
@inject IJSRuntime JS

@code {
    [Parameter] public Usuario? usuario { get; set; }
    [Parameter] public EventCallback CloseIt { get; set; }
    [Parameter] public EventCallback<Usuario> OnSave { get; set; }

    private string nombre = string.Empty;
    private string apellido = string.Empty;
    private string num_telefonico = string.Empty;
    private DateTime fecha_nacimiento = DateTime.Today;
    private string user_name = string.Empty; // Nombre de Usuario
    private string correo = string.Empty;
    // private string activo = "Y";

    private bool nombreInvalido;
    private bool apellidoInvalido;
    private bool numTelefonicoInvalido;
    private bool fechaNacimientoInvalida;
    private bool userNameInvalido;
    private bool correoInvalido;

    protected override void OnParametersSet()
    {
        if (usuario is not null)
        {
            nombre = usuario.nombre;
            apellido = usuario.apellido;
            num_telefonico = usuario.num_telefonico;
            fecha_nacimiento = usuario.fecha_nacimiento;
            user_name = usuario.UserName;
            correo = usuario.correo;
            // activo = usuario.activo;
        }
    }

    private async Task Saving()
    {
        nombreInvalido = string.IsNullOrWhiteSpace(nombre);
        apellidoInvalido = string.IsNullOrWhiteSpace(apellido);
        numTelefonicoInvalido = string.IsNullOrWhiteSpace(num_telefonico);
        fechaNacimientoInvalida = fecha_nacimiento == default || 
                                  fecha_nacimiento > DateTime.Today || 
                                  fecha_nacimiento < DateTime.Today.AddYears(-120);
        userNameInvalido = string.IsNullOrWhiteSpace(user_name);
        correoInvalido = string.IsNullOrWhiteSpace(correo) || !correo.Contains("@");

        if (nombreInvalido || apellidoInvalido || numTelefonicoInvalido ||
            fechaNacimientoInvalida || userNameInvalido || correoInvalido)
            return;

        if (usuario is not null)
        {
            usuario.nombre = nombre;
            usuario.apellido = apellido;
            usuario.num_telefonico = num_telefonico;
            usuario.fecha_nacimiento = fecha_nacimiento;
            usuario.UserName = user_name;
            usuario.correo = correo;
            usuario.hash_password = "Hash";
            // usuario.activo = activo;
            usuario.TUO_ID_Tipo_Usuario = 1;

            await OnSave.InvokeAsync(usuario);
        }
    }

    private string errorMessage = "";
}


<div class="modal-box">
    <button class="close-button" @onclick="() => CloseIt.InvokeAsync()">X</button>
    <h4 class=" ms-3 text-start modal-title">@((usuario == null || usuario.nombre == "")?"Agregar Usuario":"Editar Usuario")</h4>

    <div class="form-vertical">
        <label class="text-start ms-3">Nombre</label>
        <input type="text" @bind="nombre" placeholder="Nombre" class="@(nombreInvalido ? "input-error" : "")" />
        @if (nombreInvalido)
        {
            <div class="error-text">El nombre es requerido</div>
        }

        <label class="text-start ms-3">Apellido</label>
        <input type="text" @bind="apellido" placeholder="Apellido" class="@(apellidoInvalido ? "input-error" : "")" />
        @if (apellidoInvalido)
        {
            <div class="error-text">El apellido es requerido</div>
        }

        <label class="text-start ms-3">Número Telefónico</label>
        <input type="text" @bind="num_telefonico" placeholder="NumTelefonico" class="@(numTelefonicoInvalido ? "input-error" : "")" />
        @if (numTelefonicoInvalido)
        {
            <div class="error-text">El número telefónico es requerido</div>
        }

        <label class="text-start ms-3">Fecha de Nacimiento</label>
        <input type="date" @bind="fecha_nacimiento" placeholder="FechaNacimiento" class="@(fechaNacimientoInvalida ? "input-error" : "")" />
        @if (fechaNacimientoInvalida)
        {
            <div class="error-text">Formato de fecha inválido</div>
        }

        <label class="text-start ms-3">Nombre de usuario</label>
        <input type="text" @bind="user_name" placeholder="NombreUsuario" class="@(userNameInvalido ? "input-error" : "")" />
        @if (userNameInvalido)
        {
            <div class="error-text">El nombre de usuario es requerido</div>
        }

        <label class="text-start ms-3">Correo</label>
        <input type="text" @bind="correo" placeholder="Correo" class="@(correoInvalido ? "input-error" : "")" />
        @if (correoInvalido)
        {
            <div class="error-text">Formato de correo inválido</div>
        }

        @if (!string.IsNullOrWhiteSpace(errorMessage))
        {
            <div class="error-text" style="margin-top: 8px;">@errorMessage</div>
        }

        <button class="guardar-button" @onclick="Saving">Guardar</button>
    </div>
</div>
